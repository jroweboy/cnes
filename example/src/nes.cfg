MEMORY {
    ZP:     start = $00,    size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0400, type = rw, file = "";
    STACK:  start = $0700,  size = $0100, type = rw, file = ""; # C stack location
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    
    # 8k bank #0
    PRG_A0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
    PRG_A1: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
    PRG_A2: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
    PRG_A3: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

    # 8k banks
    PRG_A4: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;
    PRG_C0: start = $c000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

    # fixed bank
    PRGLow: start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

    # fixed bank
    PRGLast:start = $e000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

    # add more CHR banks here
    
    VECTORS:start = $fffa,  size = $6,    file = %O, fill = yes;
    CHR:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff;

}

SEGMENTS {
    INESHDR:    load = HDR,     type = ro;
    ZEROPAGE:   load = ZP,      type = zp;
    OAM:        load = OAM,     type = bss, align = $100;
    BSS:        load = RAM,     type = bss;
    TILES:      load = CHR,     type = ro;

    CODE:       load = PRGLow, type = ro;
    IRQ:        load = PRGLast, type = ro;

    # Audio data
    AUDIO_megalovania_megalovania:      load = PRG_A4,   type = ro;

    # DMC tracks and sfx. This has to be in $c000 or higher,
    # but it can't be banked out while DMC audio is playing...
    # define = "yes" creates the symbol __AUDIO_DMC_LOAD__ that we can use
    # to determine the start location for the DMC audio
    AUDIO_megalovania_dmc:  load = PRG_C0,  type = ro,  define=yes;
    
    VECTORS:    load = PRGLast, type = ro,  start = $fffa;
}

SYMBOLS {
    # Define a few linker symbols for the C stack location
    __STACKSIZE__:   type = weak, value = $00FF;     # 1 page stack
	__STACK_START__: type = weak, value = $0700;
}

